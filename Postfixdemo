package mycollections;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;

public class Postfixdemo {
public static void main (String[] args) throws IOException{
	//create input stream reader
	BufferedReader br=new BufferedReader((new InputStreamReader(System.in)));
	//prompt the user for postfix notation
	System.out.println("Enter postfix expression:");
	String postfixExpression=br.readLine();
	//create stack for operators
	Stack operStack=new Stack();
	//create stack for operands 
	Stack operandStack=new Stack();
	
	
	//push elements into 
	for(int index=0;index<postfixExpression.length();index++)
	{
		if(postfixExpression.charAt(index)>=48 && postfixExpression.charAt(index)<=57)
		{
			operandStack.push(postfixExpression.charAt(index));
		}else
		{
			operStack.push(postfixExpression.charAt(index));
			
		}
	}
	//pop two elements from operand stack and one element from operator stack
	for (int counter=0;counter<operandStack.size();counter++)
	{
		int firstElement=(int)operandStack.pop();
		int secondElement=(int)operandStack.pop();
		char operator=(char)operStack.pop();
		
		int result;
		 switch(operator)
		 
		 {
  

    case '+' : result=firstElement+secondElement;
               operandStack.push(result);
               break;
    case '-' : result=firstElement+secondElement;
               operandStack.push(result);
               break;

    case '*' : result=firstElement+secondElement;
               operandStack.push(result);
               break;

    case '/' : result=firstElement+secondElement;
               operandStack.push(result);
               break;
               default:
        }
       if(counter<operandStack.size()-1)
         {
	        result=(int)operandStack.pop();
	        System.out.println(result);
          }
	}
}
}
